name: Deploy to Production

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [production]

    steps:
      - uses: actions/checkout@v4

      - name: Instalar jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Obtener último commit SHA de develop
        id: get_sha
        run: |
          SHA=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/commits/develop \
          | jq -r '.sha' | cut -c1-7)
          echo "IMAGE_TAG=$SHA" > desafio-semana-3/.env.prod
          echo "Último SHA de develop: $SHA"  

      - name: Login a GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Docker Compose - Pull & Deploy
        run: |
          export IMAGE_TAG=$(cut -d '=' -f2 desafio-semana-3/.env.prod)
          echo "Usando TAG: $IMAGE_TAG"
          sed "s/\${IMAGE_TAG}/$IMAGE_TAG/g" desafio-semana-3/docker-compose.prod.yml > desafio-semana-3/docker-compose.tmp.yml
          docker-compose -f desafio-semana-3/docker-compose.tmp.yml down
          docker-compose -f desafio-semana-3/docker-compose.tmp.yml pull
          docker-compose -f desafio-semana-3/docker-compose.tmp.yml up -d

      - name: Esperar que los servicios estén listos
        run: sleep 10

      - name: Health check
        run: bash desafio-semana-3/scripts/health-check.sh http://localhost:80

      - name: Smoke test
        run: curl -f http://localhost:3000 || exit 1
